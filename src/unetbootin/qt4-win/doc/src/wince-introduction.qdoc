/****************************************************************************
**
** Copyright (C) 2007-2008 Trolltech ASA. All rights reserved.
**
** This file is part of the documentation of the Qt Toolkit.
**
** This file may be used under the terms of the GNU General Public
** License versions 2.0 or 3.0 as published by the Free Software
** Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
** included in the packaging of this file.  Alternatively you may (at
** your option) use any later version of the GNU General Public
** License if such license has been publicly approved by Trolltech ASA
** (or its successors, if any) and the KDE Free Qt Foundation. In
** addition, as a special exception, Trolltech gives you certain
** additional rights. These rights are described in the Trolltech GPL
** Exception version 1.2, which can be found at
** http://www.trolltech.com/products/qt/gplexception/ and in the file
** GPL_EXCEPTION.txt in this package.
**
** Please review the following information to ensure GNU General
** Public Licensing requirements will be met:
** http://trolltech.com/products/qt/licenses/licensing/opensource/. If
** you are unsure which license is appropriate for your use, please
** review the following information:
** http://trolltech.com/products/qt/licenses/licensing/licensingoverview
** or contact the sales department at sales@trolltech.com.
**
** In addition, as a special exception, Trolltech, as the sole
** copyright holder for Qt Designer, grants users of the Qt/Eclipse
** Integration plug-in the right for the Qt/Eclipse Integration to
** link to functionality provided by Qt Designer and its related
** libraries.
**
** This file is provided "AS IS" with NO WARRANTY OF ANY KIND,
** INCLUDING THE WARRANTIES OF DESIGN, MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE. Trolltech reserves all rights not expressly
** granted herein.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

/*!
    \page wince-with-qt-introduction.html

    \title Windows CE - Introduction to using Qt
    \brief An introduction to Qt for Windows CE developers.
    \ingroup howto
    \ingroup qtce

    \tableofcontents

    \section1 Required tools

    In order to use Qt for Windows CE you need to have Visual Studio
    2005 and at least one of the supported Windows CE/Mobile SDKs
    installed.

    We recommend the \e{Windows Mobile 5.0 SDK for Pocket PC} SDK available
    \l{http://www.microsoft.com/downloads/details.aspx?FamilyID=83a52af2-f524-4ec5-9155-717cbe5d25ed&DisplayLang=en}{here}.

    \section1 Installing Qt

    Follow the instructions found in \l{Installing Qt/Windows CE}.

    \section1 Building your own applications

    If you are new to Qt development, have a look at \l{How to Learn Qt}
    and \l{Qt Tutorial}. In general there is little or no difference in
    developing Qt applications for Windows CE compared to any of the
    other platforms supported by Qt.

    Once you have a \c .pro file, there are two ways of building your
    application. You can either do it on the command line or inside of
    VS2005. To do it on the command line, simply write:

    \snippet doc/src/snippets/code/doc.src.wince-introduction.qdoc 0

    To build the project inside of VS2005, on the command line write:

    \snippet doc/src/snippets/code/doc.src.wince-introduction.qdoc 1

    then start VS2005 with the generated \c .vcproj or \c .sln file and
    select \e{Build project}.

    For more information on how to use qmake have a look at the \l
    {qmake Tutorial}.

    \section1 Running the application

    In order to run the application, it needs to be deployed on the
    Windows CE/Mobile device you want to test it for. This can either
    be done manually or automated using VS2005.

    To do it manually, simply copy the executable, the Qt \c{.dll}
    files needed for the application to run, and the C-runtime library
    into a folder on the device, and then click on the executable to
    start the program. You can either use the \e Explorer found in
    ActiveSync or the \e{Remote File Viewer} found in VS2005 to do
    this.

    VS2005 can do this step automatically for you as well. If you have
    built the project inside VS2005, simply select \e Deploy and then
    \e Debug to deploy and then run the application. You can change the
    device type by changing the \e{Target Device} specified in the
    VS2005 toolbar.

    Further information on deploying Qt applications for Windows can
    be found in the \l{Deploying an Application on Qt/Windows}
    {deployment document}.
*/
