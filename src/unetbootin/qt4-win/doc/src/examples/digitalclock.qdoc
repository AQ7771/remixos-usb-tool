/****************************************************************************
**
** Copyright (C) 2004-2008 Trolltech ASA. All rights reserved.
**
** This file is part of the documentation of the Qt Toolkit.
**
** This file may be used under the terms of the GNU General Public
** License versions 2.0 or 3.0 as published by the Free Software
** Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
** included in the packaging of this file.  Alternatively you may (at
** your option) use any later version of the GNU General Public
** License if such license has been publicly approved by Trolltech ASA
** (or its successors, if any) and the KDE Free Qt Foundation. In
** addition, as a special exception, Trolltech gives you certain
** additional rights. These rights are described in the Trolltech GPL
** Exception version 1.2, which can be found at
** http://www.trolltech.com/products/qt/gplexception/ and in the file
** GPL_EXCEPTION.txt in this package.
**
** Please review the following information to ensure GNU General
** Public Licensing requirements will be met:
** http://trolltech.com/products/qt/licenses/licensing/opensource/. If
** you are unsure which license is appropriate for your use, please
** review the following information:
** http://trolltech.com/products/qt/licenses/licensing/licensingoverview
** or contact the sales department at sales@trolltech.com.
**
** In addition, as a special exception, Trolltech, as the sole
** copyright holder for Qt Designer, grants users of the Qt/Eclipse
** Integration plug-in the right for the Qt/Eclipse Integration to
** link to functionality provided by Qt Designer and its related
** libraries.
**
** This file is provided "AS IS" with NO WARRANTY OF ANY KIND,
** INCLUDING THE WARRANTIES OF DESIGN, MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE. Trolltech reserves all rights not expressly
** granted herein.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

/*!
    \example widgets/digitalclock
    \title Digital Clock Example

    The Digital Clock example shows how to use QLCDNumber to display a 
    number with LCD-like digits.

    \image digitalclock-example.png Screenshot of the Digital Clock example

    This example also demonstrates how QTimer can be used to update a widget
    at regular intervals.

    \section1 DigitalClock Class Definition

    The \c DigitalClock class provides a clock widget showing the time with
    hours and minutes separated by a blinking colon. We subclass QLCDNumber
    and implement a private slot called \c showTime() to update the clock
    display:

    \snippet examples/widgets/digitalclock/digitalclock.h 0

    \section1 DigitalClock Class Implementation

    \snippet examples/widgets/digitalclock/digitalclock.cpp 0

    In the constructor, we first change the look of the LCD numbers. The
    QLCDNumber::Filled style produces raised segments filled with the
    foreground color (typically black). We also set up a one-second timer
    to keep track of the current time, and we connect
    its \l{QTimer::timeout()}{timeout()} signal to the private \c showTime() slot
    so that the display is updated every second. Then, we
    call the \c showTime() slot; without this call, there would be a one-second
    delay at startup before the time is shown.

    \snippet examples/widgets/digitalclock/digitalclock.cpp 1
    \snippet examples/widgets/digitalclock/digitalclock.cpp 2

    The \c showTime() slot is called whenever the clock display needs
    to be updated.

    The current time is converted into a string with the format "hh:mm".
    When QTime::second() is a even number, the colon in the string is
    replaced with a space. This makes the colon appear and vanish every
    other second.

    Finally, we call QLCDNumber::display() to update the widget.
*/
