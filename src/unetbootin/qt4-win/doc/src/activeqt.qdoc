/****************************************************************************
**
** Copyright (C) 2004-2008 Trolltech ASA. All rights reserved.
**
** This file is part of the documentation of the Qt Toolkit.
**
** This file may be used under the terms of the GNU General Public
** License versions 2.0 or 3.0 as published by the Free Software
** Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
** included in the packaging of this file.  Alternatively you may (at
** your option) use any later version of the GNU General Public
** License if such license has been publicly approved by Trolltech ASA
** (or its successors, if any) and the KDE Free Qt Foundation. In
** addition, as a special exception, Trolltech gives you certain
** additional rights. These rights are described in the Trolltech GPL
** Exception version 1.2, which can be found at
** http://www.trolltech.com/products/qt/gplexception/ and in the file
** GPL_EXCEPTION.txt in this package.
**
** Please review the following information to ensure GNU General
** Public Licensing requirements will be met:
** http://trolltech.com/products/qt/licenses/licensing/opensource/. If
** you are unsure which license is appropriate for your use, please
** review the following information:
** http://trolltech.com/products/qt/licenses/licensing/licensingoverview
** or contact the sales department at sales@trolltech.com.
**
** In addition, as a special exception, Trolltech, as the sole
** copyright holder for Qt Designer, grants users of the Qt/Eclipse
** Integration plug-in the right for the Qt/Eclipse Integration to
** link to functionality provided by Qt Designer and its related
** libraries.
**
** This file is provided "AS IS" with NO WARRANTY OF ANY KIND,
** INCLUDING THE WARRANTIES OF DESIGN, MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE. Trolltech reserves all rights not expressly
** granted herein.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

/*!
    \page activeqt.html
    \title ActiveQt Framework
    \brief An overview of Qt's ActiveX and COM integration on Windows.

    \ingroup platform-notes
    \keyword ActiveQt

    Qt's ActiveX and COM support allows Qt/Windows developers to:

    \list 1
    \o Access and use ActiveX controls and COM objects provided by any 
    ActiveX server in their Qt applications.
    \o Make their Qt applications available as COM servers, with
    any number of Qt objects and widgets as COM objects and ActiveX 
    controls.
    \endlist

    The ActiveQt framework consists of two modules:

    \list
    \o The \l QAxContainer module is a static
       library implementing QObject and QWidget subclasses, QAxObject and
       QAxWidget, that act as containers for COM objects and ActiveX
       controls.
    \o The \l QAxServer module is a static library that implements
       functionality for in-process and executable COM servers. This
       module provides the QAxAggregated, QAxBindable and QAxFactory
       classes.
    \endlist

    To build the static libraries, change into the \c activeqt directory 
    (usually \c QTDIR/src/activeqt), and run \c qmake and your make
    tool in both the \c container and the \c control subdirectory.
    The libraries \c qaxcontainer.lib and \c qaxserver.lib will be linked 
    into \c QTDIR/lib.

    If you are using a shared configuration of Qt enter the \c plugin
    subdirectory and run \c qmake and your make tool to build a
    plugin that integrates the QAxContainer module into \l{Qt
    Designer}.

    The ActiveQt modules are part of the \l{Qt Desktop Edition}. They
    are \e not part of the \l{Qt Open Source Edition}.

    \sa {QAxContainer Module}, {QAxServer Module}
*/
